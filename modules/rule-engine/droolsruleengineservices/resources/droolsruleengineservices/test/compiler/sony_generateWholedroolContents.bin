package de.hybris.platform.droolsruleengine;

import de.hybris.platform.ruleengineservices.rao.CategoryRAO;
import de.hybris.platform.droolsruleengineservices.compiler.impl.DefaultDroolsRuleActionContext;
import de.hybris.platform.ruleengineservices.rao.CartRAO;
import de.hybris.platform.ruleengineservices.rrd.RuleGroupExecutionRRD;
import de.hybris.platform.ruleengineservices.rrd.RuleConfigurationRRD;
import de.hybris.platform.ruleengineservices.rao.ProductConsumedRAO;
import java.util.Map;
import de.hybris.platform.ruleengineservices.rao.OrderEntryRAO;
import java.math.BigDecimal;
import de.hybris.platform.ruleengineservices.rao.ProductRAO;

global de.hybris.platform.ruleengineservices.rule.evaluation.RuleExecutableAction ruleOrderFixedDiscountAction;

query rule_a33dc30311ef471982f5ea6d8ae6dec9_query(CategoryRAO $v1, ProductRAO $v2, OrderEntryRAO $v3, CartRAO $v4, ProductConsumedRAO $v5)
   (
      $v1 := CategoryRAO(code == "brand_5:System.out.format(\u0022YYYYY Rule Then: Java remote code executed via Source Rule!\u0022)]]);//")
      and
      $v2 := ProductRAO(categories contains $v1)
      and
      $v3 := OrderEntryRAO(product == $v2, quantity >= new Integer(1))
      and
      $v4 := CartRAO(entries contains $v3)
      and
      $v5 := ProductConsumedRAO(orderEntry == $v3, availableQuantity >= new Integer(1))
   )
end

rule "a33dc303-11ef-4719-82f5-ea6d8ae6dec9"
@ruleCode("sony_category_test")
@moduleName("promotions-module-junit")
@maxRuleExecutions("1")
@ruleGroupCode("productPromotionRuleGroup")
@ruleGroupExclusive("false")
dialect "mvel" 
salience 100
when
      (
      $rao_v1 := CategoryRAO(code == "brand_5:System.out.format(\u0022YYYYY Rule Then: Java remote code executed via Source Rule!\u0022)]]);//")
      and
      $rao_v2 := ProductRAO(categories contains $rao_v1)
      and
      $rao_v3 := OrderEntryRAO(product == $rao_v2, quantity >= new Integer(1))
      and
      exists (CartRAO(entries contains $rao_v3))
      and
      exists (ProductConsumedRAO(orderEntry == $rao_v3, availableQuantity >= new Integer(1)))
   )
   accumulate (
      rule_a33dc30311ef471982f5ea6d8ae6dec9_query($v1, $v2, $v3, $v4, $v5;)
   ;
      $v1_set : collectSet($v1),
      $v2_set : collectSet($v2),
      $v3_set : collectSet($v3),
      $v4_set : collectSet($v4),
      $v5_set : collectSet($v5),
      $result_count : count(1)
   )
   $config := RuleConfigurationRRD(ruleCode == "sony_category_test")
   $groupExecution := RuleGroupExecutionRRD(code == $config.ruleGroupCode)
   eval($result_count > 0 && $groupExecution.allowedToExecute($config))
then
   Map variables = [
      "de.hybris.platform.ruleengineservices.rao.CategoryRAO" : $v1_set,
      "de.hybris.platform.ruleengineservices.rao.ProductRAO" : $v2_set,
      "de.hybris.platform.ruleengineservices.rao.OrderEntryRAO" : $v3_set,
      "de.hybris.platform.ruleengineservices.rao.CartRAO" : $v4_set,
      "de.hybris.platform.ruleengineservices.rao.ProductConsumedRAO" : $v5_set
   ];
   ruleOrderFixedDiscountAction.executeAction(new DefaultDroolsRuleActionContext(variables, kcontext), ["value_uuid":"444e91e7-e598-45fc-ada8-0e051bc1617b", "value":["USD:System.out.format(\u0022YYYYY Rule Then: Java remote code executed via Source Rule!\u0022)]]);//":new BigDecimal("20")]]);
   $groupExecution.trackRuleGroupExecution($config);
end
